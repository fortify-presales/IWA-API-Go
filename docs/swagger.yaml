basePath: /api/v1
definitions:
  model.APIError:
    properties:
      errorCode:
        type: integer
      errorMessage:
        type: string
    type: object
  model.APIMessage:
    properties:
      message:
        type: string
    type: object
  note.Note:
    properties:
      createdon:
        type: string
      description:
        type: string
      noteid:
        type: string
      title:
        type: string
    type: object
  site.Site:
    properties:
      hostname:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: do-not-reply@opentext.com
    name: API Support
    url: https://github.com/fortify-presales/insecure-go-api
  description: This is an insecure Go REST API for use in OpenText Application Security
    demonstrations.
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  termsOfService: https://github.com/fortify-presales/insecure-go-api
  title: Insecure Go REST API
  version: "1.0"
paths:
  /notes:
    get:
      consumes:
      - application/json
      description: Get all Notes
      parameters:
      - description: search by keywords
        example: alphadex
        in: query
        name: keywords
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/note.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Get Notes
      tags:
      - notes
  /notes/:
    post:
      consumes:
      - application/json
      description: Create a new Note
      parameters:
      - description: Note
        in: body
        name: Note
        required: true
        schema:
          $ref: '#/definitions/note.Note'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/note.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Create Note
      tags:
      - notes
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.APIMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Could not find Note Id
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Delete Note
      tags:
      - notes
    get:
      consumes:
      - application/json
      description: Get a Note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/note.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Could not find Note Id
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Get Note
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: Update an existing Note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Note
        in: body
        name: Note
        required: true
        schema:
          $ref: '#/definitions/note.Note'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/note.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Could not find Note Id
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Update Note
      tags:
      - notes
  /site/download/{id}:
    get:
      consumes:
      - application/json
      description: Download a file by ID
      parameters:
      - description: id
        example: '"12345"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Download File
      tags:
      - site
  /site/ping:
    get:
      consumes:
      - application/json
      description: Ping a Site using URL query parameter
      parameters:
      - description: hostname
        example: '"localhost"'
        in: query
        name: hostname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Ping Site by Query
      tags:
      - site
    post:
      consumes:
      - application/json
      description: |-
        Ping a Site using JSON Body
        JSON Body should contain a "hostname" field
        Example: {"hostname": "localhost"}
        This is a JSON Injection vulnerability example
      parameters:
      - description: Site
        in: body
        name: Site
        required: true
        schema:
          $ref: '#/definitions/site.Site'
      produces:
      - application/json
      responses:
        "200":
          description: string
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Ping Site by Body
      tags:
      - site
swagger: "2.0"
